/*
 * Dac Services
 * Dac Service REST API
 *
 * OpenAPI spec version: 1.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package de.hf.dac.myfinance.client.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.LocalDate;
import java.time.LocalDateTime;

/**
 * Instrument
 */
@javax.annotation.Generated(value = "de.hf.dac.myfinance.codegen.MyFinanceClient_JavaGenerator", date = "2020-07-17T02:16:39.752+02:00")
public class Instrument {
  @JsonProperty("instrumentid")
  private Integer instrumentid = null;

  @JsonProperty("description")
  private String description = null;

  @JsonProperty("isactive")
  private Boolean isactive = null;

  @JsonProperty("maturitydate")
  private LocalDate maturitydate = null;

  @JsonProperty("closingdate")
  private LocalDate closingdate = null;

  @JsonProperty("treelastchanged")
  private LocalDateTime treelastchanged = null;

  /**
   * Gets or Sets instrumentType
   */
  public enum InstrumentTypeEnum {
    GIRO("Giro"),
    
    MONEYATCALL("MoneyAtCall"),
    
    TIMEDEPOSIT("TimeDeposit"),
    
    BUILDINGSAVINGACCOUNT("BuildingsavingAccount"),
    
    BUDGET("Budget"),
    
    TENANT("Tenant"),
    
    ACCOUNTPORTFOLIO("AccountPortfolio"),
    
    ARTIFICIALPORTFOLIO("ArtificialPortfolio"),
    
    BUDGETGROUP("BudgetGroup"),
    
    DEPOT("Depot"),
    
    BUILDINGSAVING("Buildingsaving"),
    
    CURRENCY("Currency"),
    
    EQUITY("Equity"),
    
    FONDS("Fonds"),
    
    ETF("ETF"),
    
    INDEX("Index"),
    
    BOND("Bond"),
    
    LIFEINSURANCE("LifeInsurance"),
    
    DEPRECIATIONOBJECT("DepreciationObject"),
    
    REALESTATE("RealEstate"),
    
    LOAN("Loan"),
    
    UNKNOWN("UNKNOWN");

    private String value;

    InstrumentTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static InstrumentTypeEnum fromValue(String text) {
      for (InstrumentTypeEnum b : InstrumentTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("instrumentType")
  private InstrumentTypeEnum instrumentType = null;

  @JsonProperty("businesskey")
  private String businesskey = null;

  public Instrument instrumentid(Integer instrumentid) {
    this.instrumentid = instrumentid;
    return this;
  }

   /**
   * Get instrumentid
   * @return instrumentid
  **/
  @ApiModelProperty(required = true, value = "")
  public Integer getInstrumentid() {
    return instrumentid;
  }

  public void setInstrumentid(Integer instrumentid) {
    this.instrumentid = instrumentid;
  }

  public Instrument description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(required = true, value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public Instrument isactive(Boolean isactive) {
    this.isactive = isactive;
    return this;
  }

   /**
   * Get isactive
   * @return isactive
  **/
  @ApiModelProperty(required = true, value = "")
  public Boolean isIsactive() {
    return isactive;
  }

  public void setIsactive(Boolean isactive) {
    this.isactive = isactive;
  }

  public Instrument maturitydate(LocalDate maturitydate) {
    this.maturitydate = maturitydate;
    return this;
  }

   /**
   * Get maturitydate
   * @return maturitydate
  **/
  @ApiModelProperty(value = "")
  public LocalDate getMaturitydate() {
    return maturitydate;
  }

  public void setMaturitydate(LocalDate maturitydate) {
    this.maturitydate = maturitydate;
  }

  public Instrument closingdate(LocalDate closingdate) {
    this.closingdate = closingdate;
    return this;
  }

   /**
   * Get closingdate
   * @return closingdate
  **/
  @ApiModelProperty(value = "")
  public LocalDate getClosingdate() {
    return closingdate;
  }

  public void setClosingdate(LocalDate closingdate) {
    this.closingdate = closingdate;
  }

  public Instrument treelastchanged(LocalDateTime treelastchanged) {
    this.treelastchanged = treelastchanged;
    return this;
  }

   /**
   * Get treelastchanged
   * @return treelastchanged
  **/
  @ApiModelProperty(required = true, value = "")
  public LocalDateTime getTreelastchanged() {
    return treelastchanged;
  }

  public void setTreelastchanged(LocalDateTime treelastchanged) {
    this.treelastchanged = treelastchanged;
  }

  public Instrument instrumentType(InstrumentTypeEnum instrumentType) {
    this.instrumentType = instrumentType;
    return this;
  }

   /**
   * Get instrumentType
   * @return instrumentType
  **/
  @ApiModelProperty(required = true, value = "")
  public InstrumentTypeEnum getInstrumentType() {
    return instrumentType;
  }

  public void setInstrumentType(InstrumentTypeEnum instrumentType) {
    this.instrumentType = instrumentType;
  }

  public Instrument businesskey(String businesskey) {
    this.businesskey = businesskey;
    return this;
  }

   /**
   * Get businesskey
   * @return businesskey
  **/
  @ApiModelProperty(value = "")
  public String getBusinesskey() {
    return businesskey;
  }

  public void setBusinesskey(String businesskey) {
    this.businesskey = businesskey;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Instrument instrument = (Instrument) o;
    return Objects.equals(this.instrumentid, instrument.instrumentid) &&
        Objects.equals(this.description, instrument.description) &&
        Objects.equals(this.isactive, instrument.isactive) &&
        Objects.equals(this.maturitydate, instrument.maturitydate) &&
        Objects.equals(this.closingdate, instrument.closingdate) &&
        Objects.equals(this.treelastchanged, instrument.treelastchanged) &&
        Objects.equals(this.instrumentType, instrument.instrumentType) &&
        Objects.equals(this.businesskey, instrument.businesskey);
  }

  @Override
  public int hashCode() {
    return Objects.hash(instrumentid, description, isactive, maturitydate, closingdate, treelastchanged, instrumentType, businesskey);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Instrument {\n");
    
    sb.append("    instrumentid: ").append(toIndentedString(instrumentid)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    isactive: ").append(toIndentedString(isactive)).append("\n");
    sb.append("    maturitydate: ").append(toIndentedString(maturitydate)).append("\n");
    sb.append("    closingdate: ").append(toIndentedString(closingdate)).append("\n");
    sb.append("    treelastchanged: ").append(toIndentedString(treelastchanged)).append("\n");
    sb.append("    instrumentType: ").append(toIndentedString(instrumentType)).append("\n");
    sb.append("    businesskey: ").append(toIndentedString(businesskey)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

