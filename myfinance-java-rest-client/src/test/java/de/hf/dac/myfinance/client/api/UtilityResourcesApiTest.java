/*
 * Dac Services
 * Dac Service REST API
 *
 * OpenAPI spec version: 1.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package de.hf.dac.myfinance.client.api;

import io.swagger.client.ApiException;
import de.hf.dac.myfinance.client.model.DateDoubleModel;
import de.hf.dac.myfinance.client.model.InstrumentListModel;
import de.hf.dac.myfinance.client.model.InstrumentModel;
import de.hf.dac.myfinance.client.model.TransactionListModel;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for UtilityResourcesApi
 */
@Ignore
public class UtilityResourcesApiTest {

    private final UtilityResourcesApi api = new UtilityResourcesApi();

    
    /**
     * List Data
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getInstrumentForTenantList_envID_tenantTest() throws ApiException {
        String envID = null;
        Integer tenant = null;
        InstrumentListModel response = api.getInstrumentForTenantList_envID_tenant(envID, tenant);

        // TODO: test validations
    }
    
    /**
     * List Data
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getInstrumentList_envIDTest() throws ApiException {
        String envID = null;
        InstrumentListModel response = api.getInstrumentList_envID(envID);

        // TODO: test validations
    }
    
    /**
     * List Data
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getInstrumentPerTypeList_envID_tenant_instrumenttypeTest() throws ApiException {
        String envID = null;
        Integer tenant = null;
        String instrumenttype = null;
        InstrumentListModel response = api.getInstrumentPerTypeList_envID_tenant_instrumenttype(envID, tenant, instrumenttype);

        // TODO: test validations
    }
    
    /**
     * get Data
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getInstrument_envID_isinTest() throws ApiException {
        String envID = null;
        String isin = null;
        InstrumentModel response = api.getInstrument_envID_isin(envID, isin);

        // TODO: test validations
    }
    
    /**
     * List Data
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getTenantList_envIDTest() throws ApiException {
        String envID = null;
        InstrumentListModel response = api.getTenantList_envID(envID);

        // TODO: test validations
    }
    
    /**
     * List Data
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getTransactionList_envID_startdate_enddateTest() throws ApiException {
        String envID = null;
        String startdate = null;
        String enddate = null;
        TransactionListModel response = api.getTransactionList_envID_startdate_enddate(envID, startdate, enddate);

        // TODO: test validations
    }
    
    /**
     * Map Data
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getValueMap_envID_instrumentId_startdate_enddateTest() throws ApiException {
        Integer instrumentId = null;
        String envID = null;
        String startdate = null;
        String enddate = null;
        DateDoubleModel response = api.getValueMap_envID_instrumentId_startdate_enddate(instrumentId, envID, startdate, enddate);

        // TODO: test validations
    }
    
}
